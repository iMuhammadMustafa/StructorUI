@mixin btn($color: $gray-100) {
  appearance: none;
  background-color: $color;
  border: $border-thickness-base solid $color;
  border-radius: 6px;
  box-sizing: border-box;
  cursor: pointer;
  display: inline-block;
  list-style: none;
  padding: 6px 16px;
  position: relative;
  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);
  touch-action: manipulation;
  white-space: nowrap;
  word-wrap: break-word;
  //   color: #24292e;
  //   box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;
  //   font-family: -apple-system, system-ui, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
  //   font-size: 14px;
  //   font-weight: 500;
  //   line-height: 20px;
  //   user-select: none;
  //   -webkit-user-select: none;
  //   vertical-align: middle;

  &:hover {
    transition-duration: 0.1s;
    text-decoration: none;
    background-color: darken($color, 10%);
    border-color: darken($color, 10%);
  }

  &:disabled {
    background-color: $secondary;
    cursor: default;
  }
}

.btn {
  @include btn();
}
.btn-outline {
  @include btn($light);
  border-color: $dark;
}

@each $key, $val in CreateThemeColorVariationsMap() {
  .btn-#{$key} {
    @include btn($val);

    @if ($key == "primary" or $key == "secondary" or $key == "success" or $key == "danger" or $key == "dark") {
      color: $light;
      &:hover {
        background-color: darken($val, 10%);
        border-color: darken($val, 10%);
      }
    } @else {
      color: $dark;
      &:hover {
        background-color: lighten($val, 10%);
        border-color: lighten($val, 10%);
      }
    }
  }

  .btn-outline-#{$key} {
    @include btn($light);
    border-color: $val;
    color: $val;

    &:hover {
      background-color: $val;
      border-color: $val;

      @if ($key == "primary" or $key == "secondary" or $key == "success" or $key == "danger" or $key == "dark") {
        color: $light;
      } @else {
        color: $dark;
      }
    }
  }
}
